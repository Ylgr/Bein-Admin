{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","web3","contract","isConnectWallet","buyAmount","rateInput","bicUser","busdUser","bicBalance","busdBalance","rateOutput","_rateInput","_rateOutput","bicAddress","busdAddress","withdrawToken","transferAdmin","adminAddress","currentAddress","soldDetails","receivedDetails","isShowDetails","this","syncStaticData","then","syncContractBalance","syncChangeableData","syncBuyLogs","window","ethereum","self","setState","Web3","a","request","method","eth","getAccounts","addresses","Contract","IDOAbi","process","syncUserBalance","on","alert","message","methods","bicToken","call","bicAddr","busdToken","busdAddr","input","output","owner","adminAddr","bicContract","BEP20Abi","busdContract","balanceOf","_bicBalance","_busdBalance","utils","fromWei","getPastEvents","fromBlock","toBlock","pastEvent","soldLogs","receivedLogs","forEach","e","result","returnValues","push","time","Date","amount","bicAmont","user","buyer","busdtAmount","event","target","name","value","updatePrice","send","from","withdraw","transferOwnership","allowance","toWei","approve","buy","details","reduce","r","parseFloat","Row","Col","md","Button","onClick","connectWithMetamask","href","Card","body","CardTitle","tag","Input","type","onChange","handleChange","disabled","buyBIC","CardText","placeholder","toggle","amountReport","Collapse","isOpen","Table","map","index","toString","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74a11c49.chunk.js","sourcesContent":["import React from 'react';\nimport Web3 from \"web3\";\nimport IDOAbi from \"./abi/IDO.json\";\nimport BEP20Abi from \"./abi/BEP20.json\";\nimport {Col, Row, Card, CardTitle, CardText, Button, Input, Collapse, Table} from 'reactstrap';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            web3: null,\n            contract: null,\n            isConnectWallet: false,\n            buyAmount: 0,\n            rateInput: 0,\n            bicUser: 0,\n            busdUser: 0,\n            bicBalance: 0,\n            busdBalance: 0,\n            rateOutput: 0,\n            _rateInput: 0,\n            _rateOutput: 0,\n            bicAddress: null,\n            busdAddress: null,\n            withdrawToken: null,\n            transferAdmin: null,\n            adminAddress: null,\n            currentAddress: null,\n            soldDetails: [],\n            receivedDetails: [],\n            isShowDetails: false\n        }\n    }\n    componentDidMount() {\n        this.syncStaticData().then(() => {\n            this.syncContractBalance()\n        })\n        this.syncChangeableData()\n        this.syncBuyLogs()\n    }\n\n    connectWithMetamask() {\n        if(window.ethereum) {\n            const self = this\n            this.setState({\n                web3: new Web3(window.ethereum)\n            }, async function () {\n                try {\n                    await window.ethereum.request({ method: 'eth_requestAccounts' })\n                    const addresses = await self.state.web3.eth.getAccounts()\n                    this.setState({\n                        contract: new this.state.web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT),\n                        isConnectWallet: true,\n                        currentAddress: addresses[0]\n                    }, function () {\n                        self.syncUserBalance()\n                    })\n\n                    window.ethereum.on('accountsChanged', function(addresses){\n                        self.setState({\n                            currentAddress: addresses[0]\n                        })\n                    })\n                } catch (e) {\n                    alert(`Something went wrong?\\n ${e.message}`)\n                }\n            })\n        } else alert('You need to have metamask first!')\n    }\n\n    async syncStaticData() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const bicAddr = await contract.methods.bicToken().call()\n        const busdAddr = await contract.methods.busdToken().call()\n        this.setState({\n            bicAddress: bicAddr,\n            busdAddress: busdAddr,\n            withdrawToken: bicAddr\n        })\n    }\n\n    async syncChangeableData() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const rateInput = await contract.methods.input().call()\n        const rateOutput = await contract.methods.output().call()\n        const adminAddr = await contract.methods.owner().call()\n        this.setState({\n            adminAddress: adminAddr,\n            rateInput: rateInput,\n            rateOutput: rateOutput,\n            _rateInput: rateInput,\n            _rateOutput: rateOutput,\n        })\n    }\n\n    async syncContractBalance() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const bicContract = new web3.eth.Contract(BEP20Abi, this.state.bicAddress)\n        const busdContract = new web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const _bicBalance = await bicContract.methods.balanceOf(process.env.REACT_APP_IDO_CONTRACT).call()\n        const _busdBalance = await busdContract.methods.balanceOf(process.env.REACT_APP_IDO_CONTRACT).call()\n        this.setState({\n            bicBalance: Web3.utils.fromWei(_bicBalance),\n            busdBalance: Web3.utils.fromWei(_busdBalance),\n        })\n    }\n\n    async syncUserBalance() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const bicContract = new web3.eth.Contract(BEP20Abi, this.state.bicAddress)\n        const busdContract = new web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const _bicBalance = await bicContract.methods.balanceOf(this.state.currentAddress).call()\n        const _busdBalance = await busdContract.methods.balanceOf(this.state.currentAddress).call()\n        this.setState({\n            bicUser: Web3.utils.fromWei(_bicBalance),\n            busdUser: Web3.utils.fromWei(_busdBalance),\n        })\n    }\n\n    async syncBuyLogs() {\n        const web3 = new Web3(process.env.REACT_APP_BSC_ENDPOINT)\n        const contract = new web3.eth.Contract(IDOAbi, process.env.REACT_APP_IDO_CONTRACT)\n        const pastEvent = await contract.getPastEvents('BuySuccess', { fromBlock: 0, toBlock: 'latest' })\n        let soldLogs = []\n        let receivedLogs = []\n        pastEvent.forEach(e => {\n            const result = e.returnValues\n            soldLogs.push({\n                time: new Date(result.time*1000),\n                amount: result.bicAmont,\n                user: result.buyer,\n            })\n            receivedLogs.push({\n                time: new Date(result.time*1000),\n                amount: result.busdtAmount,\n                user: result.buyer,\n            })\n        })\n        this.setState({\n            soldDetails: soldLogs,\n            receivedDetails: receivedLogs,\n        })\n    }\n\n    handleChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    async updatePrice() {\n        await this.state.contract.methods.updatePrice(this.state._rateInput, this.state._rateOutput).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async withdrawToken() {\n        await this.state.contract.methods.withdraw(this.state.withdrawToken).send({from: this.state.currentAddress})\n        await this.syncContractBalance()\n        await this.syncUserBalance()\n    }\n\n    async transferAdmin() {\n        await this.state.contract.methods.transferOwnership(this.state.transferAdmin).send({from: this.state.currentAddress})\n        await this.syncChangeableData()\n    }\n\n    async buyBIC() {\n        const busdContract = new this.state.web3.eth.Contract(BEP20Abi, this.state.busdAddress)\n        const allowance = await busdContract.methods.allowance(this.state.currentAddress, process.env.REACT_APP_IDO_CONTRACT).call()\n        if(allowance < Web3.utils.toWei(this.state.buyAmount)) {\n            await busdContract.methods.approve(process.env.REACT_APP_IDO_CONTRACT, '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n                .send({from: this.state.currentAddress})\n        }\n        await this.state.contract.methods.buy(Web3.utils.toWei(this.state.buyAmount)).send({from: this.state.currentAddress})\n        await this.syncContractBalance()\n        await this.syncUserBalance()\n    }\n\n    amountReport(details) {\n        return details.reduce((r, e) => {\n            return r + parseFloat(Web3.utils.fromWei(e.amount))\n        }, 0)\n    }\n\n    toggle() {\n        this.setState({isShowDetails: !this.state.isShowDetails});\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col md=\"3\">\n                        <h1>BeIn IDO page</h1>\n                    </Col>\n                    <Col md=\"3\">\n                        <Button onClick={() => this.connectWithMetamask()}>Connect metamask</Button>\n                    </Col>\n                    <Col md=\"2\"><a href={`https://testnet.bscscan.com/address/${process.env.REACT_APP_IDO_CONTRACT}`}>IDO contract</a></Col>\n                    <Col md=\"2\"><a href={`https://testnet.bscscan.com/address/${this.state.bicAddress}`}>BIC contract</a></Col>\n                    <Col md=\"2\"><a href={`https://testnet.bscscan.com/address/${this.state.busdAddress}`}>BUSD contract</a></Col>\n                </Row>\n                <Row>\n                    <h2>User:</h2><p>{this.state.currentAddress}</p>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Buy BIC (BUSD):</CardTitle>\n                            <Input name=\"buyAmount\" type=\"number\" value={this.state.buyAmount} onChange={(e) => this.handleChange(e)}/>\n                            <Button disabled={!this.state.isConnectWallet} onClick={() => this.buyBIC()}>Buy</Button>\n                        </Card>\n                    </Col>\n                    <Col md=\"2\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Receive:</CardTitle>\n                            <p>{this.state.buyAmount * this.state.rateOutput / this.state.rateInput || 0} BIC</p>\n                        </Card>\n                    </Col>\n                    <Col md=\"2\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Balance:</CardTitle>\n                            <p>{this.state.bicUser} BIC</p>\n                            <p>{this.state.busdUser} BUSD</p>\n                        </Card>\n                    </Col>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Note:</CardTitle>\n                            <CardText>The first time you buy, we need to request your permission to using your BUSD.</CardText>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <h2>Admin:</h2><p>{this.state.adminAddress}</p>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Update price (current 1BUSD = {this.state.rateOutput/this.state.rateInput || 0}BIC):</CardTitle>\n                            <Input type=\"number\" placeholder=\"BUSD Rate\" name=\"_rateInput\" value={this.state._rateInput} onChange={(e) => this.handleChange(e)}/>\n                            <Input type=\"number\" placeholder=\"BIC Rate\" name=\"_rateOutput\" value={this.state._rateOutput} onChange={(e) => this.handleChange(e)}  />\n                            <Button disabled={!this.state.isConnectWallet} onClick={() => this.updatePrice()}>Change</Button>\n                        </Card>\n                    </Col>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Withdraw token:</CardTitle>\n                            <CardText>BIC: {this.state.bicBalance}</CardText>\n                            <CardText>BUSD: {this.state.busdBalance}</CardText>\n                            <Input type=\"select\" name=\"withdrawToken\" value={this.state.withdrawToken} onChange={(e) => this.handleChange(e)} >\n                                <option value={this.state.bicAddress}>BIC</option>\n                                <option value={this.state.busdAddress}>BUSD</option>\n                            </Input>\n                            <Button disabled={!this.state.isConnectWallet} onClick={() => this.withdrawToken()}>Withdraw</Button>\n                        </Card>\n                    </Col>\n                    <Col md=\"4\">\n                        <Card body>\n                            <CardTitle tag=\"h3\">Transfer admin:</CardTitle>\n                            <Input type=\"string\" name=\"transferAdmin\" value={this.state.transferAdmin} onChange={(e) => this.handleChange(e)}  />\n                            <Button disabled={!this.state.isConnectWallet} onClick={() => this.transferAdmin()}>Transfer</Button>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row>\n                    <Row>\n                        <Col md=\"4\"><h2>IDO info:</h2></Col>\n                        <Col md=\"4\"><Button onClick={() => this.syncBuyLogs()}>Refresh</Button></Col>\n                        <Col md=\"4\"><Button onClick={() => this.toggle()}>Show detail</Button></Col>\n                    </Row>\n                    <Row>\n                        <h3>Total sold BIC:  {this.amountReport(this.state.soldDetails) || 0}</h3>\n                        <Collapse isOpen={this.state.isShowDetails}>\n                            <Card>\n                                <Table>\n                                    <thead>\n                                        <tr>\n                                            <th>#</th>\n                                            <th>Time</th>\n                                            <th>Address</th>\n                                            <th>Amount (BIC)</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.state.soldDetails.map((e,index) => <tr>\n                                            <th key={'sold' + index}>{index + 1}</th>\n                                            <td>{e.time.toString()}</td>\n                                            <td>{e.user}</td>\n                                            <td>{Web3.utils.fromWei(e.amount)}</td>\n                                        </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Collapse>\n                    </Row>\n                    <Row>\n                        <h3>Total received BUSD: {this.amountReport(this.state.receivedDetails) || 0}</h3>\n                        <Collapse isOpen={this.state.isShowDetails}>\n                            <Card>\n                                <Table>\n                                    <thead>\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Time</th>\n                                        <th>Address</th>\n                                        <th>Amount (BUSD)</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {this.state.receivedDetails.map((e,index) => <tr>\n                                        <th key={'sold' + index}>{index + 1}</th>\n                                        <td>{e.time.toString()}</td>\n                                        <td>{e.user}</td>\n                                        <td>{Web3.utils.fromWei(e.amount)}</td>\n                                    </tr>)}\n                                    </tbody>\n                                </Table>\n                            </Card>\n                        </Collapse>\n                    </Row>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}